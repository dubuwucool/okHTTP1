package com.zhiyuan3g.okhttpdemo;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class DownPicActivity extends AppCompatActivity implements View.OnClickListener {

    private Button btn_ok;
    private ImageView imgShow;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_down_pic_activity);
        initView();
    }


    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case 1:
                    //通过Message拿到字节数组
                    byte[] picture= (byte[]) msg.obj;
                    //使用BitmapFactory将字节数组转换为bitmap
                    Bitmap bitmap = BitmapFactory.decodeByteArray(picture,0,picture.length);
                    //通过imgview,设置图片
                    imgShow.setImageBitmap(bitmap);

                    break;
                case 2:
                    Toast.makeText(DownPicActivity.this, "请求失败", Toast.LENGTH_SHORT).show();
                    break;

            }
        }
    };

    private void initView() {
        btn_ok = (Button) findViewById(R.id.btn_ok);
        imgShow = (ImageView) findViewById(R.id.imgShow);

        btn_ok.setOnClickListener(this);
    }

    private static final String PATH = "http://g.hiphotos.baidu.com/zhidao/pic/item/1e30e924b899a901da2aece318950a7b0308f5cc.jpg";

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            //根据点击事件,获取图片资源.使用httpclient框架
            case R.id.btn_ok:
                //创建okhttpclient对象,
                OkHttpClient okHttpClient = new OkHttpClient();
                //建立Request.Builder对象,设置参数,如果请求方式是get就不用设置(默认为get).
                Request request = new Request.Builder()
                        .url(PATH) //设置请求网址
                        .build();//建立request对象
                //创建一个Call对象,参数为request对象,发送请求
                Call call = okHttpClient.newCall(request);
                //异步请求,请求加入调度
                call.enqueue(new Callback() {
                    @Override
                    public void onFailure(Call call, IOException e) {
                        handler.sendEmptyMessage(2);
                    }

                    @Override
                    public void onResponse(Call call, Response response) throws IOException {
                    //得到从网上获取资源,转换成我们想要的类型
                        byte[] bt =response.body().bytes();
                        //通过handler更新UI
                        Message message =handler.obtainMessage();
                        message.obj=bt;
                        message.what=1;
                        handler.sendMessage(message);
                    }
                });
                break;
        }
    }
}
